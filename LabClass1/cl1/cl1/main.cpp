#include <iostream>
#include "Tariff.h"
using namespace std;


Tariff make_Tariff(unsigned int min, float rub)								// Функция инициализации объекта
{
	Tariff conv;																	// Выделение памяти под объект
	conv.Init(min, rub);															// Вызов метода инициализации полей объекта
	return conv;
}

int main()
{
	system("chcp 1251>NULL");
	
	Tariff One;
	Tariff Two;

	One.Init(18, 1.75);																// Вызов метода инициализации полей объекта 1
	cout << "Инициализация объекта Two" << endl;
	Two.Read();																		// Вызов метода заполнения полей объекта 2
	
	cout << "\t\tOne" << endl;
	One.Show();																		// Вызов метода вывода полей объекта 1
	cout << "Стоимость разговора объекта One: " << One.Cost() << " р" << endl;				// Вызов метода нахождения зарплаты за месяц объекта 1
	
	cout << "\t\tTwo" << endl;
	Two.Show();																		// Вызов метода вывода полей объекта 2
	cout << "Стоимость разговора объекта Two: " << Two.Cost() << " р" << endl;				// Вызов метода нахождения зарплаты за месяц объекта 2
	
	Tariff* ptr_Three = new Tariff;													// Выделение памяти под объект 3 через указатель
	
	cout << "\t\tThree" << endl;
	ptr_Three->Init(5, 2.3);														// Вызов метода инициализации полей объекта 3
	ptr_Three->Show();																// Вызов метода вывода полей объекта 3
	cout << "Стоимость разговора объекта Three: " << ptr_Three->Cost() << " р" << endl << endl;
	
	Tariff mas[3];																	// Выделение памяти под множество объектов
	cout << "mas___________________________________" << endl;

	cout << "Заполнение массива" << endl;
	for (int i = 0; i < 3; i++)
	{
		cout << "Объект #" << i + 1 << endl;
		mas[i].Read();																// Вызов метода заполнения полей каждого объекта из множества
	}
	
	cout << "\nВывод массива" << endl;
	for (int i = 0; i < 3; i++)
	{
		cout << "Объект #" << i + 1 << endl;
		mas[i].Show();																// Вызов метода вывода полей каждого объекта из множества				
	}
	
	for (int i = 0; i < 3; i++)
	{																				// Вызов метода нахождения зарплаты за месяц объекта каждого объекта из множества
		cout << "Стоимость разговора объекта # " << i + 1 << ": " << mas[i].Cost() << " р" << endl;
	}
	

	Tariff* arr = new Tariff[3];		
	cout << "\narr___________________________________" << endl << endl;;						// Выделение памяти под указатель на первый объект множества
	
	cout << "Заполнение массива" << endl;
	for (int i = 0; i < 3; i++)
	{
		cout << "Объект #" << i + 1 << endl;
		arr[i].Read();																// Вызов метода заполнения полей каждого объекта из множества
	}

	cout << "\nВывод массива" << endl;
	for (int i = 0; i < 3; i++)
	{
		cout << "Объект #" << i + 1 << endl;
		arr[i].Show();																// Вызов метода вывода полей каждого объекта из множества				
	}

	for (int i = 0; i < 3; i++)
	{																				// Вызов метода нахождения зарплаты за месяц объекта каждого объекта из множества
		cout << "Стоимость разговора объекта #" << i + 1 << ": " << arr[i].Cost() << " р" << endl;
	}
		
	unsigned int minutes;
	float rubles;
	cout << "\nИнициализация объекта Four" << endl;
	cout << "Введите продолжительность разговора в минутах: ";
	cin >> minutes;
	while (minutes < 0)
	{
		cout << "Неверно введена продолжительность разговора! Попробуйте ещё раз: ";
		cin >> minutes;
	}
	
	cout << "Введите стоимость минуты разговора: ";
	cin >> rubles;
	Tariff Four = make_Tariff(minutes, rubles);										// Вызов Функция создания объекта D4 и заполнение его полей
	cout << "\t\tFour" << endl;
	Four.Show();																		// Вызов метода вывода полей объекта 4
	cout << "Стоимость разговора объекта Four: " << Four.Cost() << " р" << endl << endl;
}